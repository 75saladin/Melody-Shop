  This project is written in python 2, but it intended to be run in the digital
sound synthesis and signal-processing "language" RTcmix. This project uses the
python version of RTcmix. For more information on RTcmix, see rtcmix.org.
  In order to run this project, you must have the standalone version of RTcmix
installed on your machine such that you can run PYCMIX. Your default python
version (ie the one that is used when you call "python" on the command line)
must be 2.x for PYCMIX to work correctly.

Running instructions:
    ONLY FROM THE TOP-LEVEL DIRECTORY (ie where main.py resides), use the
    following command:
        ./play PYCMIX

    If you need to use an absolute path to run PYCMIX, then append that path to the front of "PYCMIX"
    If you want to record a run, then edit main.py's call to preamble(). Make it "preamble(True)".

My terminology for this project:
        (All other terms should be adequately defined on rtcmix.org.)
    "Scorefile":
        A text file in the ".sco" format. These files are parsed by Minc using
        the command "CMIX".
    "Script":
        I will use this term to refer to a python script (".py"). These files
        are parsed by python using the command "PYCMIX".
    "Score":
        I will use this term to refer to the main.py, the highest-level script
        that encompasses the entire piece.
    "Piece":
        A complete musical work. When we run the score, we hear the "piece"
        that the score scripts.


FAQ:
    Why do I have to run the script only from the top-level directory?
        This is necessary because RTCmix python scripts triggered by PYCMIX
        do not have the script's directory on the class path (sys.path). It
        seems there is no way to retrieve the file's name either, since the
        script's __file__ gets set to "???". So, the only way to have relative
        imports work is to manually add the current working directory to the
        class path and always execute the project (main.py) from its top-
        level directory (where main.py should reside).
